{"_id":"post-a054652e-3b5d-461c-b75d-748fc411eb66","_type":"post","title":"Teaching refugees how to code","slug":{"_type":"slug","current":"refugees"},"body":[{"_key":"98cbaed0f90a","children":[{"_type":"span","marks":[],"text":"At Repl.it our mission is to make programming more accessible. We can’t do this alone so it’s great to partner with non-profits and hack clubs that share our mission. ","_key":"98cbaed0f90a0"},{"_type":"span","marks":["07ca99b0c26d"],"text":"Re-coded","_key":"98cbaed0f90a1"},{"_type":"span","marks":[],"text":" is one of those non-profits, they're teaching programming in the refugee camps in Iraq and Turkey. Today I’d like to share with you their story of how they found Repl.it useful in overcoming logistical challenges.","_key":"98cbaed0f90a2"}],"markDefs":[{"_key":"07ca99b0c26d","_type":"link","href":"http://www.re-coded.com/"}],"_type":"block","style":"normal"},{"_key":"563e343829f0","children":[{"_type":"span","_key":"563e343829f00","text":"","marks":[]}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"17e2d6ca9fe4","children":[{"_type":"span","marks":[],"text":"By: Gabe Jackson","_key":"17e2d6ca9fe40"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"0eaeb2e4b613","children":[{"_type":"span","marks":[],"text":"At Re:Coded, it’s our goal to provide a world-class education to refugees and displaced persons who would not otherwise have access to such opportunities.","_key":"0eaeb2e4b6130"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"4d2d8f24d2d1","children":[{"_type":"span","marks":[],"text":"In making that goal a reality, we depend on a number of tools in the classroom. One of our favorites is repl.it, an in-browser IDE and REPL that we use for everything from facilitating our selection process to live coding through examples in class to creating personalized homework assignments for students.","_key":"4d2d8f24d2d10"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"5a1689392b53","children":[{"_type":"span","marks":[],"text":"We began using repl.it as a platform for live coding in front of the class. As our trainers work through an example with the class, they can save the code at various stages of completion. repl.it provides a unique link for each saved state, making it easy for students to follow along. Students can also revisit the example code at previous stages to refresh their memory as to how the final code came to be and challenge themselves to repeat the steps of its creation.","_key":"5a1689392b530"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"78c1c3a72964","children":[{"_type":"span","marks":[],"text":"repl.it allows the trainers to switch paradigms seamlessly. In our pilot cohort in 2016–2017, we taught programming fundamentals in Ruby before transitioning towards front-end development with JavaScript. If students were having trouble understanding a new concept in JavaScript, we could simply open up a Ruby repl.it right next to the JavaScript one and write (and run!) the same code in a more familiar language.","_key":"78c1c3a729640"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"e2a65a915c05","children":[{"_type":"span","marks":[],"text":"Students learning in the refugee camp We also love how lightweight yet feature-rich repl.it is. The main application bundle for the JavaScript and Ruby repl.it pages currently checks in at about 735 KB, which seems criminally small given how much functionality is packed into it. Sure, it takes the average US household connection less than a half-second to download 735 KB, but to halt the analysis there is dangerously myopic. Performance zealots are sometimes pooh-poohed by their well-meaning but close-minded peers, but such considerations really matter in environments with less-than-stellar Internet connections and intermittent service. An entire sandboxed development environment in less than a megabyte is incredible, full-stop.","_key":"e2a65a915c050"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"4130ed830fb3","children":[{"_type":"span","marks":[],"text":"In planning the selection process for the second Re:Coded cohort, we decided to create a code challenge for prospective students. There were several ideas bandied about as to how we could best accomplish this. Our two primary requirements were minimal environmental complexity (since we wanted to assess the applicants’ coding aptitude; not their ability to set up a local development environment) and ease of aggregating and viewing the results. repl.it knocked it out of the park on both counts.","_key":"4130ed830fb30"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"8ac9d02aef1d","children":[{"_type":"span","marks":[],"text":"Because repl.it requires nothing beyond a browser, it was painless for applicants with minimal computing experience to get up and running. We added all of the prospective students into a repl.it Classroom, created some examples for them to follow and an assignment to complete, and were notified every time a new submission arrived. It worked perfectly.","_key":"8ac9d02aef1d0"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"a284fa962bd5","children":[{"_type":"span","marks":[],"text":"When we first encountered repl.it, it seemed like a cute tool for sharing short code snippets. Fast-forward a year, and it was an integral part of the tech stack at Re:Coded. Its flexibility, portability, trivial setup cost, and minimal network overhead helped it carve out an important role in our tooling. Thanks for the great software, repl.it!","_key":"a284fa962bd50"}],"markDefs":[],"_type":"block","style":"normal"}],"publishedAt":"2018-01-26T08:00:00.000Z"}