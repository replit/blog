{"_id":"post-dec082fb-cb10-40dd-9cdf-ddec2301d3e9","_type":"post","title":"Git in the Shell","slug":{"_type":"slug","current":"git-in-the-shell"},"body":[{"_key":"f24525b183ae","children":[{"_type":"span","_key":"f24525b183ae0","text":"","marks":[]}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"4d08b375f612","children":[{"_type":"span","marks":[],"text":"Starting today, the Git command-line tools of all Repls provide a much better experience and integrate with your GitHub account. If you connect your GitHub account to Replit from the ","_key":"4d08b375f6120"},{"_type":"span","marks":["c0e13ade2783"],"text":"Account page","_key":"4d08b375f6121"},{"_type":"span","marks":[],"text":", your Git commands (like ","_key":"4d08b375f6122"},{"_type":"span","marks":["code"],"text":"git clone","_key":"4d08b375f6123"},{"_type":"span","marks":[],"text":", ","_key":"4d08b375f6124"},{"_type":"span","marks":["code"],"text":"git fetch","_key":"4d08b375f6125"},{"_type":"span","marks":[],"text":", ","_key":"4d08b375f6126"},{"_type":"span","marks":["code"],"text":"git push","_key":"4d08b375f6127"},{"_type":"span","marks":[],"text":") will have access to your GitHub repositories:","_key":"4d08b375f6128"}],"markDefs":[{"_key":"c0e13ade2783","_type":"link","href":"https://replit.com/account"}],"_type":"block","style":"normal"},{"_key":"822212c8ba6f","children":[{"_type":"span","_key":"822212c8ba6f0","text":"","marks":[]}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"979a6557d2af","children":[{"_type":"span","marks":[],"text":"You're now able compose Git commit messages in the editor:","_key":"979a6557d2af0"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"2fefc9393b87","children":[{"_type":"span","_key":"2fefc9393b870","text":"","marks":[]}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"162168a5ad4e","children":[{"_type":"span","marks":[],"text":"Or, even do interactive rebases:","_key":"162168a5ad4e0"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"adf36bb4a1a1","children":[{"_type":"span","_key":"adf36bb4a1a10","text":"","marks":[]}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"e8ed0261c8e7","children":[{"_type":"span","marks":[],"text":"For security, the first time each session that Git needs your GitHub token, you'll see this message:","_key":"e8ed0261c8e70"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"9363ec961362","children":[{"_type":"span","_key":"9363ec9613620","text":"","marks":[]}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"3d603cc14036","children":[{"_type":"span","marks":[],"text":"Then subsequent requests will run seamlessly.","_key":"3d603cc140360"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"2f392bdb618b","children":[{"_type":"span","marks":[],"text":"Please note, this feature is not designed for Multiplayer, and we do not recommend you use it with Multiplayer because the other people could access your GitHub token.","_key":"2f392bdb618b0"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"41591effbff9","children":[{"_type":"span","marks":[],"text":"Please let us know what you think of Git in the Shell on the ","_key":"41591effbff90"},{"_type":"span","marks":["e01790ce9f7b"],"text":"Replit Ask forum","_key":"41591effbff91"},{"_type":"span","marks":[],"text":" and read on if you are interested in how we built it.","_key":"41591effbff92"}],"markDefs":[{"_key":"e01790ce9f7b","_type":"link","href":"https://ask.replit.com/t/announcing-git-in-the-shell/8167"}],"_type":"block","style":"normal"},{"_key":"d1952afc797f","children":[{"_type":"span","marks":[],"text":"How we built it","_key":"d1952afc797f0"}],"markDefs":[],"_type":"block","style":"h2"},{"_key":"793e18368b59","children":[{"_type":"span","marks":[],"text":"Let's start by explaining how the Git editor integration works. In the backend, we've set the ","_key":"793e18368b590"},{"_type":"span","marks":["code"],"text":"GIT_EDITOR","_key":"793e18368b591"},{"_type":"span","marks":[],"text":" environment variable for you, so that when you run a Git command that needs an editor it knows to use the Workspace editor. To make this work, we've added a new REST API to each Repl that allows it to communicate with the Workspace. For example,","_key":"793e18368b592"}],"markDefs":[],"_type":"block","style":"normal"},{"_type":"codeBlock","language":"text","codeContent":"curl -X POST \"localhost:8283/files/open\" \\\n  -H \"Accept: application/json\" -H \"Content-Type: application/json\" \\\n  --data '{\"filename\": \".replit\"}'\n","_key":"effeac5eaac2"},{"_key":"e098a3f3ebd5","children":[{"_type":"span","marks":[],"text":"will open the ","_key":"e098a3f3ebd50"},{"_type":"span","marks":["code"],"text":".replit","_key":"e098a3f3ebd51"},{"_type":"span","marks":[],"text":" file.","_key":"e098a3f3ebd52"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"6ee9c2859738","children":[{"_type":"span","marks":[],"text":"For commit messages to work, we needed the API to wait until the file is closed. For example,","_key":"6ee9c28597380"}],"markDefs":[],"_type":"block","style":"normal"},{"_type":"codeBlock","language":"text","codeContent":"curl -X POST \"localhost:8283/files/open\" \\\n  -H \"Accept: application/json\" -H \"Content-Type: application/json\" \\\n  --data '{\"filename\": \".replit\", \"waitForClose\": true}'\n","_key":"65cf83833be4"},{"_key":"9c67595ae63d","children":[{"_type":"span","marks":[],"text":"will open the ","_key":"9c67595ae63d0"},{"_type":"span","marks":["code"],"text":".replit","_key":"9c67595ae63d1"},{"_type":"span","marks":[],"text":" file and not return until the tab is closed.","_key":"9c67595ae63d2"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"b327a4be82ae","children":[{"_type":"span","marks":[],"text":"The other piece of the puzzle is authentication. Git checks for the environment variable ","_key":"b327a4be82ae0"},{"_type":"span","marks":["code"],"text":"GIT_ASKPASS","_key":"b327a4be82ae1"},{"_type":"span","marks":[],"text":", which has an ","_key":"b327a4be82ae2"},{"_type":"span","marks":["em"],"text":"interesting","_key":"b327a4be82ae3"},{"_type":"span","marks":[],"text":" interface.","_key":"b327a4be82ae4"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"a15b2e48ff66","children":[{"_type":"span","marks":[],"text":"Say Git wants to get a username for remote at ","_key":"a15b2e48ff660"},{"_type":"span","marks":["08ca3a15613b"],"text":"https://github.com","_key":"a15b2e48ff661"},{"_type":"span","marks":[],"text":". It sends the same string to the ","_key":"a15b2e48ff662"},{"_type":"span","marks":["code"],"text":"GIT_ASKPASS","_key":"a15b2e48ff663"},{"_type":"span","marks":[],"text":" script that it would normally send to a user on the command-line. In this case","_key":"a15b2e48ff664"}],"markDefs":[{"_key":"08ca3a15613b","_type":"link","href":"https://github.com"}],"_type":"block","style":"normal"},{"_type":"codeBlock","language":"text","codeContent":"Username for 'https://github.com': \n","_key":"6ecba6e25d6d"},{"_key":"71c78d889e8f","children":[{"_type":"span","marks":[],"text":"And it expects the standard output of ","_key":"71c78d889e8f0"},{"_type":"span","marks":["code"],"text":"GIT_ASKPASS","_key":"71c78d889e8f1"},{"_type":"span","marks":[],"text":" to be the username, or a non-zero exit code if ","_key":"71c78d889e8f2"},{"_type":"span","marks":["code"],"text":"GIT_ASKPASS","_key":"71c78d889e8f3"},{"_type":"span","marks":[],"text":" doesn't know the username to use. For GitHub, we can respond with \"token\" for the username if we have a GitHub token to use.","_key":"71c78d889e8f4"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"628df59cddfb","children":[{"_type":"span","marks":[],"text":"Then, it calls ","_key":"628df59cddfb0"},{"_type":"span","marks":["code"],"text":"GIT_ASKPASS","_key":"628df59cddfb1"},{"_type":"span","marks":[],"text":" again for the password, like:","_key":"628df59cddfb2"}],"markDefs":[],"_type":"block","style":"normal"},{"_type":"codeBlock","language":"text","codeContent":"Password for 'https://token@github.com': \n","_key":"5abf56b2f20e"},{"_key":"13f4183a0fbc","children":[{"_type":"span","marks":[],"text":"and we can respond with the GitHub Token.","_key":"13f4183a0fbc0"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"0f32676af5ea","children":[{"_type":"span","marks":[],"text":"The REST API also provides an endpoint for the GitHub API token, which ","_key":"0f32676af5ea0"},{"_type":"span","marks":["code"],"text":"GIT_ASKPASS","_key":"0f32676af5ea1"},{"_type":"span","marks":[],"text":" uses:","_key":"0f32676af5ea2"}],"markDefs":[],"_type":"block","style":"normal"},{"_type":"codeBlock","language":"text","codeContent":"curl \"localhost:8283/github/token\"\n","_key":"cb640a6532bd"},{"_key":"75c33be62dfb","children":[{"_type":"span","marks":[],"text":"By interfacing with these standard Git environment variables, we've been able to make the Git command line experience a lot better on Replit.","_key":"75c33be62dfb0"}],"markDefs":[],"_type":"block","style":"normal"},{"_key":"070de1ce2aa4","children":[{"_type":"span","marks":[],"text":"Are you interested in programing, operating systems, and other open-source technologies? ","_key":"070de1ce2aa40"},{"_type":"span","marks":["25320e04bfd1"],"text":"Come work with us!","_key":"070de1ce2aa41"}],"markDefs":[{"_key":"25320e04bfd1","_type":"link","href":"https://replit.com/site/careers"}],"_type":"block","style":"normal"}],"publishedAt":"2023-01-30T00:00:00.000Z"}